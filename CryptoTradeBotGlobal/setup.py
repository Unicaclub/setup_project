"""
CryptoTradeBotGlobal Setup Configuration
Enterprise-grade cryptocurrency trading system
"""

from setuptools import setup, find_packages
import os
from pathlib import Path

# Read the contents of README file
this_directory = Path(__file__).parent
long_description = (this_directory / "README.md").read_text(encoding='utf-8')

# Read requirements from requirements.txt
def read_requirements():
    requirements_path = this_directory / "requirements.txt"
    if requirements_path.exists():
        with open(requirements_path, 'r', encoding='utf-8') as f:
            return [line.strip() for line in f if line.strip() and not line.startswith('#')]
    return []

# Read version from __init__.py or set default
def get_version():
    version_file = this_directory / "src" / "__init__.py"
    if version_file.exists():
        with open(version_file, 'r', encoding='utf-8') as f:
            for line in f:
                if line.startswith('__version__'):
                    return line.split('=')[1].strip().strip('"').strip("'")
    return "1.0.0"

setup(
    name="cryptotradebotglobal",
    version=get_version(),
    author="CryptoTradeBotGlobal Team",
    author_email="support@cryptotradebotglobal.com",
    description="Enterprise-grade cryptocurrency trading system with advanced risk management",
    long_description=long_description,
    long_description_content_type="text/markdown",
    url="https://github.com/Unicaclub/setup_project",
    project_urls={
        "Bug Tracker": "https://github.com/Unicaclub/setup_project/issues",
        "Documentation": "https://cryptotradebotglobal.readthedocs.io/",
        "Source Code": "https://github.com/Unicaclub/setup_project",
        "Homepage": "https://cryptotradebotglobal.com",
    },
    packages=find_packages(where="src"),
    package_dir={"": "src"},
    classifiers=[
        "Development Status :: 4 - Beta",
        "Intended Audience :: Financial and Insurance Industry",
        "Intended Audience :: Developers",
        "Topic :: Office/Business :: Financial :: Investment",
        "Topic :: Software Development :: Libraries :: Python Modules",
        "License :: OSI Approved :: MIT License",
        "Programming Language :: Python :: 3",
        "Programming Language :: Python :: 3.9",
        "Programming Language :: Python :: 3.10",
        "Programming Language :: Python :: 3.11",
        "Programming Language :: Python :: 3.12",
        "Operating System :: OS Independent",
        "Environment :: Console",
        "Environment :: Web Environment",
        "Framework :: AsyncIO",
        "Framework :: FastAPI",
        "Natural Language :: English",
        "Topic :: Internet :: WWW/HTTP :: HTTP Servers",
        "Topic :: Scientific/Engineering :: Artificial Intelligence",
        "Topic :: System :: Distributed Computing",
        "Typing :: Typed",
    ],
    python_requires=">=3.9",
    install_requires=read_requirements(),
    extras_require={
        "dev": [
            "pytest>=7.4.4",
            "pytest-asyncio>=0.23.2",
            "pytest-cov>=4.1.0",
            "pytest-mock>=3.12.0",
            "black>=23.12.1",
            "flake8>=7.0.0",
            "mypy>=1.8.0",
            "pre-commit>=3.6.0",
            "bandit>=1.7.5",
            "safety>=2.3.5",
            "isort>=5.13.2",
        ],
        "ml": [
            "tensorflow>=2.15.0",
            "torch>=2.1.2",
            "scikit-learn>=1.4.0",
            "xgboost>=2.0.3",
            "lightgbm>=4.1.0",
            "catboost>=1.2.2",
            "optuna>=3.5.0",
            "hyperopt>=0.2.7",
        ],
        "monitoring": [
            "prometheus-client>=0.19.0",
            "grafana-api>=1.0.3",
            "sentry-sdk>=1.40.0",
            "datadog>=0.47.0",
            "newrelic>=9.4.0",
        ],
        "deployment": [
            "docker>=7.0.0",
            "kubernetes>=28.1.0",
            "ansible>=8.7.0",
            "terraform-python>=0.1.0",
        ],
        "all": [
            # Include all extras
            "pytest>=7.4.4",
            "pytest-asyncio>=0.23.2",
            "pytest-cov>=4.1.0",
            "pytest-mock>=3.12.0",
            "black>=23.12.1",
            "flake8>=7.0.0",
            "mypy>=1.8.0",
            "pre-commit>=3.6.0",
            "bandit>=1.7.5",
            "safety>=2.3.5",
            "isort>=5.13.2",
            "tensorflow>=2.15.0",
            "torch>=2.1.2",
            "scikit-learn>=1.4.0",
            "xgboost>=2.0.3",
            "lightgbm>=4.1.0",
            "catboost>=1.2.2",
            "optuna>=3.5.0",
            "hyperopt>=0.2.7",
            "prometheus-client>=0.19.0",
            "grafana-api>=1.0.3",
            "sentry-sdk>=1.40.0",
            "datadog>=0.47.0",
            "newrelic>=9.4.0",
            "docker>=7.0.0",
            "kubernetes>=28.1.0",
            "ansible>=8.7.0",
            "terraform-python>=0.1.0",
        ]
    },
    entry_points={
        "console_scripts": [
            "cryptobot=src.main:main",
            "cryptobot-backtest=src.scripts.backtest:main",
            "cryptobot-optimize=src.scripts.optimize:main",
            "cryptobot-monitor=src.scripts.monitor:main",
            "cryptobot-setup=src.scripts.setup:main",
        ],
    },
    include_package_data=True,
    package_data={
        "": [
            "config/*.yaml",
            "config/*.yml",
            "config/*.json",
            "data/*.csv",
            "data/*.json",
            "templates/*.html",
            "templates/*.jinja2",
            "static/*.css",
            "static/*.js",
            "static/*.png",
            "static/*.ico",
        ],
    },
    zip_safe=False,
    keywords=[
        "cryptocurrency",
        "trading",
        "bot",
        "algorithmic-trading",
        "fintech",
        "blockchain",
        "bitcoin",
        "ethereum",
        "binance",
        "coinbase",
        "kraken",
        "technical-analysis",
        "machine-learning",
        "risk-management",
        "portfolio-management",
        "quantitative-finance",
        "automated-trading",
        "crypto-trading",
        "financial-markets",
        "investment",
        "arbitrage",
        "market-making",
        "high-frequency-trading",
        "backtesting",
        "strategy-optimization",
        "real-time-trading",
        "enterprise",
        "production-ready",
        "scalable",
        "microservices",
        "async",
        "fastapi",
        "docker",
        "kubernetes",
        "monitoring",
        "observability",
        "security",
        "compliance",
        "audit",
        "logging",
        "metrics",
        "alerts",
        "notifications",
        "dashboard",
        "api",
        "rest",
        "websocket",
        "database",
        "postgresql",
        "redis",
        "caching",
        "pub-sub",
        "event-driven",
        "architecture",
        "design-patterns",
        "solid-principles",
        "clean-code",
        "testing",
        "ci-cd",
        "devops",
        "infrastructure",
        "cloud",
        "aws",
        "gcp",
        "azure",
        "deployment",
        "scaling",
        "performance",
        "optimization",
        "latency",
        "throughput",
        "reliability",
        "availability",
        "fault-tolerance",
        "disaster-recovery",
        "backup",
        "security",
        "encryption",
        "authentication",
        "authorization",
        "rbac",
        "oauth",
        "jwt",
        "ssl",
        "tls",
        "firewall",
        "vpn",
        "penetration-testing",
        "vulnerability-assessment",
        "code-analysis",
        "static-analysis",
        "dynamic-analysis",
        "dependency-scanning",
        "license-compliance",
        "open-source",
        "mit-license",
        "community",
        "contribution",
        "documentation",
        "tutorial",
        "guide",
        "example",
        "demo",
        "sample",
        "template",
        "boilerplate",
        "framework",
        "library",
        "sdk",
        "api-client",
        "wrapper",
        "integration",
        "connector",
        "adapter",
        "plugin",
        "extension",
        "middleware",
        "interceptor",
        "decorator",
        "context-manager",
        "generator",
        "iterator",
        "coroutine",
        "async-await",
        "concurrency",
        "parallelism",
        "threading",
        "multiprocessing",
        "queue",
        "worker",
        "task",
        "job",
        "scheduler",
        "cron",
        "timer",
        "timeout",
        "retry",
        "circuit-breaker",
        "rate-limiting",
        "throttling",
        "backoff",
        "jitter",
        "exponential-backoff",
        "linear-backoff",
        "fixed-delay",
        "random-delay",
        "health-check",
        "readiness-probe",
        "liveness-probe",
        "startup-probe",
        "graceful-shutdown",
        "signal-handling",
        "process-management",
        "daemon",
        "service",
        "systemd",
        "supervisor",
        "pm2",
        "forever",
        "nodemon",
        "watchdog",
        "file-watcher",
        "hot-reload",
        "live-reload",
        "auto-restart",
        "zero-downtime",
        "blue-green-deployment",
        "canary-deployment",
        "rolling-deployment",
        "a-b-testing",
        "feature-flags",
        "configuration-management",
        "environment-variables",
        "secrets-management",
        "key-vault",
        "hashicorp-vault",
        "aws-secrets-manager",
        "azure-key-vault",
        "gcp-secret-manager",
        "kubernetes-secrets",
        "docker-secrets",
        "encryption-at-rest",
        "encryption-in-transit",
        "end-to-end-encryption",
        "zero-knowledge",
        "privacy",
        "gdpr",
        "ccpa",
        "hipaa",
        "sox",
        "pci-dss",
        "iso-27001",
        "nist",
        "cis",
        "owasp",
        "sans",
        "mitre",
        "cve",
        "cwe",
        "nvd",
        "security-advisory",
        "vulnerability-disclosure",
        "responsible-disclosure",
        "bug-bounty",
        "penetration-testing",
        "red-team",
        "blue-team",
        "purple-team",
        "threat-modeling",
        "risk-assessment",
        "security-audit",
        "compliance-audit",
        "internal-audit",
        "external-audit",
        "third-party-audit",
        "certification",
        "accreditation",
        "attestation",
        "validation",
        "verification",
        "testing",
        "quality-assurance",
        "quality-control",
        "continuous-integration",
        "continuous-deployment",
        "continuous-delivery",
        "continuous-testing",
        "continuous-monitoring",
        "continuous-improvement",
        "devops",
        "devsecops",
        "gitops",
        "infrastructure-as-code",
        "configuration-as-code",
        "policy-as-code",
        "security-as-code",
        "compliance-as-code",
        "documentation-as-code",
        "testing-as-code",
        "monitoring-as-code",
        "observability-as-code",
        "everything-as-code",
    ],
    platforms=["any"],
    license="MIT",
    license_files=["LICENSE"],
)
